note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_FLAT_CLASS

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "flat_class"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,4A,CE,EC) A(FF,47,D3,F3) A(FF,49,D4,F3) A(FF,4E,D5,F4) A(FF,50,D6,F4) A(FF,5C,D8,F4) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,4F,C9,E5) A(FF,4C,CB,E8) A(FF,49,D1,EF) 
					A(FF,49,D4,F3) A(FF,4B,D4,F3) A(FF,50,D6,F4) A(FF,50,D6,F4) A(FF,67,DB,F5) A(FF,83,DB,EF) A(FF,90,DB,EE) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(FF,51,C6,E1) A(FF,4C,CB,E8) A(FF,4A,CE,EC) A(FF,47,D3,F3) A(FF,4B,D4,F3) A(FF,4E,D5,F4) A(FF,50,D6,F4) A(FF,5C,D8,F4) 
					A(FF,75,DA,F1) A(FF,90,DB,EE) A(FF,9A,E0,F0) A(FF,AC,E6,F4) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,4F,C9,E5) A(FF,4A,CE,EC) 
					A(FF,49,D1,EF) A(FF,49,D4,F3) A(FF,4E,D5,F4) A(FF,50,D6,F4) A(FF,5C,D8,F4) A(FF,67,DB,F5) A(FF,83,DB,EF) A(FF,9A,E0,F0) A(FF,A4,E3,F2) A(FF,B4,E9,F6) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,4C,CB,E8) A(FF,49,D1,EF) A(FF,47,D3,F3) A(FF,4B,D4,F3) A(FF,50,D6,F4) A(FF,50,D6,F4) 
					A(FF,67,DB,F5) A(FF,75,DA,F1) A(FF,90,DB,EE) A(FF,A4,E3,F2) A(FF,AC,E6,F4) A(FF,BD,ED,F9) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,47,D3,F3) A(FF,49,D4,F3) A(FF,4E,D5,F4) A(FF,50,D6,F4) A(FF,5C,D8,F4) A(FF,75,DA,F1) A(FF,83,DB,EF) A(FF,9A,E0,F0) A(FF,AC,E6,F4) 
					A(FF,B4,E9,F6) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,32,7B,D6) A(FF,2E,7D,DE) A(FF,2D,7D,E1) A(FF,2B,80,E9) A(FF,29,81,ED) 
					A(FF,39,88,E9) A(FF,67,DB,F5) A(FF,83,DB,EF) A(FF,90,DB,EE) A(FF,A4,E3,F2) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,39,7B,CD) 
					A(FF,35,7B,D1) A(FF,30,7C,DA) A(FF,2D,7D,E1) A(FF,2B,7E,E5) A(FF,29,81,ED) A(FF,25,80,F1) A(FF,4A,8F,E4) A(FF,68,9C,DC) A(FF,75,A1,DB) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,3C,7B,C8) A(FF,35,7B,D1) A(FF,32,7B,D6) A(FF,2E,7D,DE) A(FF,2B,7E,E5) A(FF,2B,80,E9) 
					A(FF,25,80,F1) A(FF,39,88,E9) A(FF,59,95,DF) A(FF,75,A1,DB) A(FF,7E,A9,DE) A(FF,8D,B3,E5) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,39,7B,CD) A(FF,32,7B,D6) A(FF,30,7C,DA) A(FF,2D,7D,E1) A(FF,2B,80,E9) A(FF,29,81,ED) A(FF,39,88,E9) A(FF,4A,8F,E4) A(FF,68,9C,DC) A(FF,7E,A9,DE) 
					A(FF,86,AE,E2) A(FF,94,B8,E8) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,35,7B,D1) A(FF,30,7C,DA) A(FF,2E,7D,DE) A(FF,2B,7E,E5) 
					A(FF,29,81,ED) A(FF,25,80,F1) A(FF,4A,8F,E4) A(FF,59,95,DF) A(FF,75,A1,DB) A(FF,86,AE,E2) A(FF,8D,B3,E5) A(FF,9C,BE,EC) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,2E,7D,DE) A(FF,2D,7D,E1) A(FF,2B,80,E9) A(FF,25,80,F1) A(FF,39,88,E9) A(FF,59,95,DF) A(FF,68,9C,DC) 
					A(FF,7E,A9,DE) A(FF,8D,B3,E5) A(FF,94,B8,E8) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,29,81,ED) A(FF,39,88,E9) A(FF,4A,8F,E4) A(FF,68,9C,DC) A(FF,75,A1,DB) A(FF,86,AE,E2) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end