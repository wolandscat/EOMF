note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_EDIT_ACTIVE

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "edit_active"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,F2,D4) A(FF,FF,FF,E6) 
					A(FF,FF,FF,E6) A(FF,FF,FF,E6) A(FF,FF,FF,E6) A(FF,FF,FF,E6) A(FF,FF,FF,E3) A(FF,E2,C6,A8) A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FD,DF) A(FF,FF,FF,F1) A(FF,FF,FF,F1) A(FF,FF,FF,F1) A(FF,FF,FF,F1) A(FF,FF,FF,EF) 
					A(FF,FF,FB,DD) A(FF,FF,E4,C6) A(FF,E6,CA,AC) A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) 
					A(FF,FF,FD,DF) A(FF,FF,FF,F0) A(FF,FF,FF,F0) A(FF,FF,FF,F0) A(FF,FF,FF,F0) A(FF,FF,FF,EF) A(FF,FF,FF,E1) A(FF,F5,D9,BB) A(FF,FF,FF,F9) A(FF,E6,CA,AC) 
					A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FD,DF) A(FF,FF,FC,DE) A(FF,FF,F0,D2) A(FF,FF,ED,CF) 
					A(FF,FF,F7,D9) A(FF,FF,FC,DE) A(FF,FF,FF,E3) A(FF,F1,D5,B7) A(FF,E4,C8,AA) A(FF,E6,CA,AC) A(FF,C1,A4,86) A(FF,9C,51,33) A(FF,A9,5E,40) A(00,00,00,00) 
					A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FD,DF) A(FF,FF,FB,DD) A(FF,FF,F8,DA) A(FF,FF,F8,DA) A(FF,FF,EB,CD) A(FF,FF,FB,DD) A(FF,FF,FF,E5) A(FF,FF,EF,D1) 
					A(FF,FF,E4,C6) A(FF,F9,DD,BF) A(FF,FB,CC,AE) A(FF,FF,AF,91) A(FF,E1,56,38) A(FF,B8,1C,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FD,DF) A(FF,FF,FA,DC) 
					A(FF,FF,F3,D5) A(FF,FF,EF,D1) A(FF,FF,EA,CC) A(FF,FF,FE,E0) A(FF,FF,E6,C8) A(FF,FF,EA,CC) A(FF,FF,E8,CA) A(FF,FF,FC,C8) A(FF,FF,FF,ED) A(FF,D3,9F,81) 
					A(FF,AB,24,06) A(FF,B8,1C,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FD,DF) A(FF,FF,F9,DB) A(FF,FF,ED,CF) A(FF,FF,F6,D8) A(FF,FF,E8,CA) A(FF,FF,F5,D7) 
					A(FF,FF,E8,CA) A(FF,FF,FA,DC) A(FF,FF,FB,B4) A(FF,FF,F8,6A) A(FF,FA,B4,49) A(FF,7D,60,42) A(FF,B8,1C,00) A(FF,B8,1C,00) A(00,00,00,00) A(FF,B8,1C,00) 
					A(FF,FF,FC,DE) A(FF,FF,F8,DA) A(FF,FF,E7,C9) A(FF,FF,F6,D8) A(FF,FF,E7,C9) A(FF,FF,E7,C9) A(FF,FF,FE,E0) A(FF,FF,F8,B4) A(FF,FF,F9,6B) A(FF,FF,BA,0B) 
					A(FF,EB,90,31) A(FF,C8,AA,8A) A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FC,DE) A(FF,FF,F6,D8) A(FF,FF,F7,D9) A(FF,FF,E6,C8) 
					A(FF,FF,FB,DD) A(FF,FF,E7,C9) A(FF,FF,FB,BC) A(FF,FF,FB,6B) A(FF,FF,C0,0F) A(FF,DE,7F,1A) A(FF,F6,D5,B2) A(FF,D4,B8,9A) A(FF,B8,1C,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FC,DE) A(FF,FF,F5,D7) A(FF,FF,F1,D3) A(FF,FF,E7,C9) A(FF,FF,E5,C7) A(FF,FF,FC,C1) A(FF,FF,FB,6A) A(FF,FF,C4,13) 
					A(FF,E0,7D,12) A(FF,D9,B7,93) A(FF,FF,F5,D7) A(FF,DA,BE,A0) A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FC,DE) A(FF,FF,FF,E6) 
					A(FF,FF,FF,E6) A(FF,FF,FF,E6) A(FF,FF,FF,CE) A(FF,FF,FC,6A) A(FF,FF,C9,18) A(FF,EC,84,12) A(FF,E1,BD,97) A(FF,FF,F6,D8) A(FF,FF,FF,E7) A(FF,DA,BE,A0) 
					A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,FF,FC,DE) A(FF,FF,FF,E5) A(FF,FF,FF,E5) A(FF,FF,FF,CE) A(FF,FF,FC,6B) A(FF,FF,CD,1C) 
					A(FF,F1,86,0D) A(FF,D8,B0,88) A(FF,FF,F0,D2) A(FF,FF,FF,E5) A(FF,FF,FF,E6) A(FF,DA,BE,A0) A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) 
					A(FF,FF,F7,D9) A(FF,FF,FF,E8) A(FF,FF,FF,E8) A(FF,FF,E6,A9) A(FF,FF,CB,57) A(FF,F8,8B,0B) A(FF,D5,AB,81) A(FF,FF,EF,D1) A(FF,FF,FF,E7) A(FF,FF,FF,E8) 
					A(FF,FF,FF,EA) A(FF,DB,BF,A1) A(FF,B8,1C,00) A(00,00,00,00) A(00,00,00,00) A(FF,B8,1C,00) A(FF,C6,AA,8C) A(FF,BF,A3,85) A(FF,CF,B0,8E) A(FF,FC,BD,64) 
					A(FF,DE,8C,08) A(FF,94,66,33) A(FF,A9,8D,6F) A(FF,BE,A2,84) A(FF,BF,A3,85) A(FF,BF,A3,85) A(FF,C0,A4,86) A(FF,8B,6F,51) A(FF,B8,1C,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) 
					A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(FF,B8,1C,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end