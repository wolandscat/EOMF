note
	component:   "Eiffel Object Modelling Framework"
	description : "[
					Parent of class generator classes, with basic facilities for populating standard 
					note fields like author, copyright etc.

					Use `make' to set up the class and `generate' to do the generation.

					If the class name doesn't need to change over invocations of `generate', the descendant
					can just implement `default_class_name' to the required value.

					Otherwise, the `class_name' attribute may be set on every generation (i.e. to have the
					effect of generating distinct classes) by calling `generate_as_class'.
				   ]"
	keywords:    "embedded icons, pixmaps, class generation"
	author:      "Thomas Beale <thomas.beale@OceanInformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2012- Ocean Informatics Pty Ltd <http://www.oceaninfomatics.com>"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

deferred class
	ANY_CLASS_GENERATOR

feature -- Definitions

	default_class_name: STRING
		deferred
		end

feature -- Initialization

	make (an_author_note, a_support_note, a_copyright_note: STRING)
		do
			author_note := an_author_note
			support_note := a_support_note
			copyright_note := a_copyright_note
			create output.make (50000)
			class_name := default_class_name.twin
		end

feature -- Access

	class_name: STRING

	author_note: STRING

	support_note: STRING

	copyright_note: STRING

	output: STRING
			-- class text

feature -- Commands

	generate_as_class (a_class_name: STRING)
		do
			class_name := a_class_name
			generate
		end

	generate
		do
			output.wipe_out

			-- class header parts
			output.append (class_header)
			output.replace_substring_all ("$CLASS_NAME", class_name)
			output.replace_substring_all ("$AUTHOR", author_note)
			output.replace_substring_all ("$SUPPORT", support_note)
			output.replace_substring_all ("$COPYRIGHT", copyright_note)
			output.append ("%N")

			output.append (class_inherit_clause)
			output.append ("%N")
			output.append (class_create_clause)
			output.append ("%N")
			output.append (class_initialisation)
			output.append ("%N")

			-- main part of class
			generate_body

			-- class footer
			output.append (class_footer)
		end

feature {NONE} -- Implementation

	generate_body
		deferred
		end

feature {NONE} -- Boilerplate

	class_header: STRING = "[
note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "$AUTHOR"
	support:     "$SUPPORT"
	copyright:   "$COPYRIGHT"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class $CLASS_NAME

	]"

	class_inherit_clause: STRING
		deferred
		end

	class_create_clause: STRING
		deferred
		end

	class_initialisation: STRING
		deferred
		end

	class_footer: STRING = "[
end
	]"

end


